[project]
name = "pen-art"
version = "0.1.0"
description = "Pen Art — Flask + MongoDB Replica Set + SSR Jinja (KO/EN, KST display / UTC storage)"
readme = "README.md"
requires-python = ">=3.11,<3.13"
authors = [{ name = "Pen Art Team" }]
license = { file = "LICENSE" }

[tool.black]
line-length = 100
target-version = ["py311"]
include = '\.pyi?$'
exclude = """
(
  ^/(\.venv|venv|.git|.mypy_cache|.ruff_cache|.pytest_cache)/
  | ^/static/
  | ^/openapi/
  | ^/scripts/
)
"""

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
combine_as_imports = true
include_trailing_comma = true
force_grid_wrap = 0
known_first_party = ["app"]
skip = ["static", "openapi", "scripts", "venv", ".venv"]

[tool.ruff]
target-version = "py311"
line-length = 100
extend-exclude = ["static", "openapi", "scripts", "venv", ".venv"]

[tool.ruff.lint]
# E,F: pycodestyle/pyflakes · I: import order · B: bugbear · C4: comprehensions
# UP: pyupgrade · SIM: simplify · PIE: misc correctness
select = ["E", "F", "I", "B", "C4", "UP", "SIM", "PIE"]
ignore = [
  "E203",  # handled by black
  "E266",  # allow section comments
]
preview = false

[tool.ruff.lint.isort]
known-first-party = ["app"]
combine-as-imports = true

[tool.mypy]
python_version = "3.11"
warn_unused_ignores = true
warn_redundant_casts = true
warn_return_any = true
no_implicit_optional = true
check_untyped_defs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
strict_equality = true
ignore_missing_imports = true
follow_imports = "silent"
enable_error_code = ["truthy-bool", "redundant-expr"]
exclude = '(venv|\.venv|static|openapi|scripts)/'

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-q -ra --strict-markers --disable-warnings --maxfail=1"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*", "*Tests"]
python_functions = ["test_*"]
# Common markers
markers = [
  "slow: marks tests as slow",
  "e2e: end-to-end tests",
  "unit: unit tests",
]
# Reduce noisy deprecation warnings from deps
filterwarnings = [
  "ignore::DeprecationWarning",
  "ignore::PendingDeprecationWarning",
]

[tool.coverage.run]
branch = true
source = ["app"]
relative_files = true
omit = [
  "tests/*",
  "static/*",
  "openapi/*",
  "scripts/*",
  "app/templates/*",
]

[tool.coverage.report]
show_missing = true
skip_covered = true
fail_under = 80
exclude_lines = [
  "pragma: no cover",
  "if TYPE_CHECKING:",
  "if __name__ == .__main__.:",
]

[tool.bandit]
skips = ["B101"]  # allow assert in tests/tools
exclude_dirs = ["tests", "static", "openapi", "scripts", "venv", ".venv"]

[tool.djlint]
profile = "jinja"
max_line_length = 100
indent = 2
extension = "html,jinja,htm"
ignore = "H004,H006"  # allow inline CSS/JS when CSP permits
exclude = "static/**,openapi/**"

[tool.pydocstyle]
convention = "google"
add_ignore = ["D100", "D104", "D105", "D107"]  # relax module/class/magic docstrings

[tool.editorconfig]
indent_style = "space"
indent_size = 2
end_of_line = "lf"
insert_final_newline = true
charset = "utf-8"
trim_trailing_whitespace = true
