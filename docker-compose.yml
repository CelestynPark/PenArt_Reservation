version: "3.9"

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: penart/app:dev
    env_file:
      - .env
    environment:
      # Gunicorn tunables (override in .env as needed)
      GUNICORN_WORKERS: "2"
      GUNICORN_THREADS: "4"
      GUNICORN_TIMEOUT: "60"
      # Required runtime envs (examples; real secrets via .env)
      TIMEZONE: "Asia/Seoul"
      DEFAULT_LANG: "ko"
    depends_on:
      mongo1:
        condition: service_healthy
      mongo2:
        condition: service_started
      mongo3:
        condition: service_started
      mongo-setup:
        condition: service_completed_successfully
    networks:
      - pennet
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://127.0.0.1:8000/healthz || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 10

  nginx:
    image: nginx:1.25-alpine
    depends_on:
      app:
        condition: service_healthy
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - static_data:/var/www/static:ro
      - uploads_data:/var/www/uploads:ro
    networks:
      - pennet

  mongo1:
    image: mongo:7
    command: ["mongod", "--replSet=rs0", "--bind_ip_all"]
    healthcheck:
      test:
        ["CMD", "mongosh", "--quiet", "--eval", "db.adminCommand({ ping: 1 })"]
      interval: 10s
      timeout: 5s
      retries: 30
    volumes:
      - mongo1_data:/data/db
    networks:
      - pennet

  mongo2:
    image: mongo:7
    command: ["mongod", "--replSet=rs0", "--bind_ip_all"]
    volumes:
      - mongo2_data:/data/db
    networks:
      - pennet

  mongo3:
    image: mongo:7
    command: ["mongod", "--replSet=rs0", "--bind_ip_all"]
    volumes:
      - mongo3_data:/data/db
    networks:
      - pennet

  mongo-setup:
    image: mongo:7
    depends_on:
      mongo1:
        condition: service_healthy
      mongo2:
        condition: service_started
      mongo3:
        condition: service_started
    volumes:
      - ./scripts:/scripts:ro
    entrypoint: ["/bin/sh", "-c"]
    command: >
      "
      until mongosh --host mongo1 --quiet --eval 'db.adminCommand({ ping: 1 })' >/dev/null 2>&1; do
        echo 'Waiting for mongo1...'; sleep 2;
      done;
      mongosh --host mongo1 /scripts/init_replicaset.js
      "
    networks:
      - pennet
    restart: "no"

volumes:
  mongo1_data:
  mongo2_data:
  mongo3_data:
  static_data:
  uploads_data:

networks:
  pennet:
    driver: bridge
