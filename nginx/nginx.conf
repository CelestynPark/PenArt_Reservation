# Static serving + reverse proxy with CSP/CORS/security headers.

worker_processes auto;

events { worker_connections 1024; }

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  keepalive_timeout 65;

  # Gzip for text assets
  gzip on;
  gzip_types text/plain text/css application/json application/javascript application/xml image/svg+xml;
  gzip_min_length 1024;

  # Map for CORS allowlist (adjust domain as needed; keep Vary)
  map $http_origin $cors_allowed {
    default 0;
    "~^https?://admin\.example\.com$" 1;
  }

  upstream app_upstream {
    server app:8000;
    keepalive 32;
  }

  server {
    listen 80 default_server;
    server_name _;

    # Client upload cap (align with UPLOAD_MAX_SIZE_MB)
    client_max_body_size 10m;

    # Security headers
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;

    # Basic CSP (can be tightened per needs)
    add_header Content-Security-Policy "default-src 'self'; img-src 'self' data: blob:; script-src 'self'; style-src 'self' 'unsafe-inline'; connect-src 'self'" always;

    # CORS for Admin domain (API/SSR responses)
    if ($cors_allowed) {
      add_header Access-Control-Allow-Origin $http_origin always;
      add_header Access-Control-Allow-Credentials "true" always;
      add_header Vary "Origin" always;
      add_header Access-Control-Allow-Methods "GET,POST,PUT,PATCH,DELETE,OPTIONS" always;
      add_header Access-Control-Allow-Headers "Content-Type, X-CSRF-Token, Authorization" always;
    }

    # Preflight
    location / {
      if ($request_method = OPTIONS) {
        return 204;
      }
    }

    # Static assets (mounted read-only via volume)
    # /var/www/static  : built/static assets (css/js/img)
    # /var/www/uploads : user uploads
    location /static/ {
      alias /var/www/static/;
      access_log off;
      expires 7d;
      add_header Cache-Control "public, max-age=604800, immutable";
    }

    location /uploads/ {
      alias /var/www/uploads/;
      access_log off;
      expires 1h;
      add_header Cache-Control "public, max-age=3600";
    }

    # Health endpoints pass-through
    location = /healthz { proxy_pass http://app_upstream; }
    location = /readyz  { proxy_pass http://app_upstream; }

    # API → Flask
    location /api/ {
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_http_version 1.1;
      proxy_set_header Connection "";
      proxy_pass http://app_upstream;
    }

    # Everything else → Flask SSR
    location / {
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_http_version 1.1;
      proxy_set_header Connection "";
      proxy_pass http://app_upstream;
    }

    # Custom error pages (serve from static if present)
    error_page 404 /static/errors/404.html;
    location = /static/errors/404.html { internal; }
    error_page 500 502 503 504 /static/errors/5xx.html;
    location = /static/errors/5xx.html { internal; }
  }
}
